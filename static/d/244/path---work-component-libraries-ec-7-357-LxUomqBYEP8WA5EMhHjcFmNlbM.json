{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(PostColumn, null, React.createElement(Browser, null, React.createElement(Video, {\n    autoPlay: true,\n    loop: true\n  }, React.createElement(\"source\", {\n    src: videoMP4Integrity,\n    type: \"video/mp4\"\n  }))), React.createElement(Markdown, null, React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Standalone Library`)), React.createElement(Stack, null, React.createElement(List, null, React.createElement(ListItem, null, React.createElement(\"p\", null, React.createElement(Link, {\n    to: \"https://fractal.build\"\n  }, \"Fractal\"))), React.createElement(ListItem, null, React.createElement(\"p\", null, \"Sass, ES6 JavaScript, compiled with Babel and Webpack\")), React.createElement(ListItem, null, React.createElement(\"p\", null, \"Nunjucks templating library\")))), React.createElement(Markdown, null, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Designed as a two-week viral marketing campaign, the Redd's Apple Launcher was a browser-based game featuring an internet-controlled cannon that fired \"apples\" (read: red hockey balls) at live targets placed throughout a fake bar in a secret warehouse in northeast DC. I know.`)), React.createElement(Markdown, null, React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Styleguides`)), React.createElement(Stack, null, React.createElement(List, null, React.createElement(ListItem, null, React.createElement(\"p\", null, React.createElement(Link, {\n    to: \"https://apostrophecms.org\"\n  }, \"Apostrophe CMS\"), \" (Node.js)\")), React.createElement(ListItem, null, React.createElement(\"p\", null, \"LESS, jQuery\")), React.createElement(ListItem, null, React.createElement(\"p\", null, \"Nunjucks templating library\")))), React.createElement(Markdown, null, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Designed as a two-week viral marketing campaign, the Redd's Apple Launcher was a browser-based game featuring an internet-controlled cannon that fired \"apples\" (read: red hockey balls) at live targets placed throughout a fake bar in a secret warehouse in northeast DC. I know.`))));\n});"},"fields":{"slug":"/work/component-libraries/"},"frontmatter":{"title":"Component Libraries","overhang":false,"background":null}}},"pageContext":{"slug":"/work/component-libraries/","prev":{"fields":{"slug":"/work/remedy-plan/"},"frontmatter":{"draft":false,"title":"Remedy Plan Therapeutics","overhang":true,"background":"darkblue"},"code":{"scope":"/Users/jon/Projects/portfolio.linesandwaves.com/.cache/gatsby-mdx/mdx-scopes-dir/dae31d7be87593a3c664e6ca201da4ea.js"}},"next":null}}