{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nreturn ((_ref) => {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return React.createElement(MDXTag, {\n    name: \"wrapper\",\n    components: components\n  }, React.createElement(PostColumn, null, React.createElement(Browser, null, React.createElement(Video, {\n    autoPlay: true,\n    loop: true\n  }, React.createElement(\"source\", {\n    src: videoMP4Integrity,\n    type: \"video/mp4\"\n  }))), React.createElement(Markdown, null, React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Interactive Libraries`)), React.createElement(Stack, null, React.createElement(List, null, React.createElement(ListItem, null, React.createElement(\"p\", null, \"[Fractal](fractal.build) Component Library\")), React.createElement(ListItem, null, React.createElement(\"p\", null, \"Socket.io\")), React.createElement(ListItem, null, React.createElement(\"p\", null, \"3 scalable AWS instances, one Redis instance\")), React.createElement(ListItem, null, React.createElement(\"p\", null, \"Arduino MEGA (software in C)\")))), React.createElement(Markdown, null, React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Designed as a two-week viral marketing campaign, the Redd's Apple Launcher was a browser-based game featuring an internet-controlled cannon that fired \"apples\" (read: red hockey balls) at live targets placed throughout a fake bar in a secret warehouse in northeast DC. I know.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Thousands of players competed in real time for a chance to control the cannon using an FPS-style interface on the Redd's website, while onlookers watched the action via 3 live-streaming camera feeds. If a player managed to hit one of 50 special targets throughout the bar, a switch triggered a random prize selection that was fulfilled directly in-browser, via a third party API.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `My Role`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  I led the front and backend web teams on this project, which means I was responsible for translating the strategy team's vision into a technical plan, prototyping early efforts, collaborating with internal and external stakeholders, and leading the development team through the execution.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Process`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Step 1: believe in yourself.`, React.createElement(\"br\", null), `\nStep 2: don't die from stress.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  This was easily the most intense and challenging project I've ever worked on. Every step involved tools we'd never used before, at a scale we'd never experienced, using technology that didn't exist a year or two prior. All of it backed by a massive marketing campaign on an inflexible deadline.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  I could fill a book with the things I learned leading this project, but over time I continually return what now feels like its singular lesson: while we had no idea what the path would look like, we knew it was possible to figure it out together.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Without a roadmap to guide us, we started small and built on each victory. Early prototypes graduated to production-level APIs, browser demos collected features until the entire office could compete against each other, and gameplay was adjusted until the minute the production stream began.`), React.createElement(MDXTag, {\n    name: \"h3\",\n    components: components\n  }, `Hurdles`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Coordinating so many moving parts at once led to one of the most challenging aspects of this project — discovering fundamental limitations after having committed to our approach and the techonology powering it.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Lag was a perfect example. Livestreaming partners had to be lined up early in the project's lifecycle, and our team was assured that the platform's lag time would be a couple seconds at most. After designing the gameplay accordingly, we discovered a few weeks later during testing that the actual lag time was anywhere from five seconds to a full minute, rendering weeks of work unusable.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  With time bearing down we couldn't afford a full refactor of the game mechanics, so the team had 24 hours to devise and test a new approach that could keep the project afloat. Working together, we devised a queue-based system, where players would position each of their shots using the existing interface, and trigger the cannon to fire them off in sequence. We padded the time between gameplay elements to keep any of the action from going too far of sync with the video, and had a working prototype running the next day.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Server scalability was one of the other major challenges. Since this was designed as a viral marketing campaign, the strategy team's job was to direct as many people to the site as possible for as long as possible, which meant we needed to be prepared to scale the application for large bursts of traffic. We split the app into 4 components, each of which could be replicated across multiple servers: one in charge of the realtime event handling, one in charge of site and session logic, one in charge of the database, one in charge of ephemeral global game state.`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  Recognizing this as an opportunity to improve our own server provisioning process, we were able to roll this internal need into the scope of a client project, which became a regular strategy in subsequent engagements.`), React.createElement(MDXTag, {\n    name: \"h2\",\n    components: components\n  }, `Outcomes`), React.createElement(MDXTag, {\n    name: \"p\",\n    components: components\n  }, `  In my eyes, this project kickstarted a new era for iSL and defined the company's work for years afterward. Real-time interactive marketing campaigns were now possible, we had a tech workflow and infrastructure to support projects at this level, and most importantly — the team saw what we were all capable of, that it was possible for us to create something brand new by developing the skills we needed along the way.`))));\n});"},"fields":{"slug":"/work/component-libraries/"},"frontmatter":{"title":"Component Libraries","overhang":false,"background":null}}},"pageContext":{"slug":"/work/component-libraries/","prev":{"fields":{"slug":"/work/remedy-plan/"},"frontmatter":{"draft":false,"title":"Remedy Plan Therapeutics","overhang":true,"background":"darkblue"},"code":{"scope":"/Users/jon/Projects/portfolio.linesandwaves.com/.cache/gatsby-mdx/mdx-scopes-dir/b6ac84264009af32ab8e0642c7cdb562.js"}},"next":null}}