{"componentChunkName":"component---src-layouts-post-js","path":"/work/design-systems/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Design Systems\",\n  \"link\": null,\n  \"order\": 2,\n  \"background\": \"purple\",\n  \"overhang\": false,\n  \"draft\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(PostColumn, {\n    theme: _frontmatter.background,\n    mdxType: \"PostColumn\"\n  }, mdx(Markdown, {\n    mdxType: \"Markdown\"\n  }, mdx(\"p\", null, \"I've been excited to see the steady adoption of design systems over the last few years, and especially heartened by the emergence of \", mdx(Link, {\n    to: \"https://www.designbetter.co/design-engineering-handbook\",\n    mdxType: \"Link\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"design engineering\")), \" as a crucial discipline in many organizations.\"), mdx(\"p\", null, \"Below are a few examples of design systems I have implemented ranging from fully-documented component libraries to living styleguides, all of which have paid tremendous dividends in development time, UI resiliency, and developer empowerment.\"), mdx(\"h2\", null, \"Stackup UI\")), mdx(Stack, {\n    collapse: true,\n    theme: _frontmatter.background,\n    mdxType: \"Stack\"\n  }, mdx(List, {\n    mdxType: \"List\"\n  }, mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"React, MDX\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Tailwind, Sass, JavaScript, Webpack\")))), mdx(Browser, {\n    description: \"Documentation created for Stackup UI, Promptworks' internal design system.\",\n    mdxType: \"Browser\"\n  }, mdx(Video, {\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    mdxType: \"Video\"\n  }, mdx(\"source\", {\n    src: videoDSMP4StackupUI,\n    type: \"video/mp4\"\n  }))), mdx(Markdown, {\n    mdxType: \"Markdown\"\n  }, mdx(\"p\", null, mdx(Link, {\n    to: \"https://stackup-ui.promptworks.com/\",\n    mdxType: \"Link\"\n  }, \"Stackup UI\"), \" is an internal design system created at \", mdx(Link, {\n    to: \"https://promptworks.com\",\n    mdxType: \"Link\"\n  }, \"Promptworks\"), \", aimed at helping engineers build web and mobile apps with consistent, accessible, and resilient UI.\"), mdx(\"p\", null, \"This project was the result of a collaboration between myself and two colleagues: a design/ux lead and an engineer responsible for the company's internal scaffolding tool (Stackup).\"), mdx(\"h3\", null, \"The problem\"), mdx(\"p\", null, \"While every engineer at Promptworks specializes in certain disciplines, they all contribute at a full-stack level on each project, building and shipping features from end to end.\"), mdx(\"p\", null, \"A common refrain often expressed by teammates during retrospective meetings was:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"I want to build responsible and beautiful UI, but I don't know the best way to do it.\\\"\")), mdx(\"p\", null, \"One of the wonderful things about the Promptworks team is a shared desire to \\\"do it right\\\", and my colleagues identified a point of friction between that goal and the reality of shipping timely, cost-effective work for our clients.\"), mdx(\"p\", null, \"At the time, Jeremy Keith and the Clearleft team's writing about establishing a \", mdx(Link, {\n    to: \"https://clearleft.com/posts/design-systems\",\n    mdxType: \"Link\"\n  }, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"gestalt\")), \" was really resonating with me, and I proposed the idea of creating a shared design system with the following elements:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A library of common UI elements with consistent markup, flexible styling, and built-in accessibility baselines\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation for complex elements, identifying various design recommendations and outlining the team's rationale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cues and examples of accessibility considerations for specific UI patterns\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A project showcase documenting extended components created with Stackup UI\")), mdx(\"h3\", null, \"Results\"), mdx(\"p\", null, \"Fast forward a few years and the three of us have successfully compiled a beautiful set of tested, documented components and introduced a client-side development style that is employed for almost every one of the company's greenfield projects since 2020.\"), mdx(\"p\", null, \"These days, our colleagues are routinely shipping consistent, high-quality UI work, and complete end-to-end features without intervention. Staffing changes on projects are more easily managed now that we have a shared approach, and we're receiving regular feedback that the system is helping to demystify UI from engineers specializing in backend development.\"), mdx(\"p\", null, \"Value for our clients has dramatically increased as well, since we're able to avoid rebuilding the same set of standard components from scratch for every engagement, and invest much more time in getting the details right.\"), mdx(\"h2\", null, \"Component Libraries\")), mdx(Stack, {\n    collapse: true,\n    theme: _frontmatter.background,\n    mdxType: \"Stack\"\n  }, mdx(List, {\n    mdxType: \"List\"\n  }, mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, mdx(Link, {\n    to: \"https://fractal.build\",\n    mdxType: \"Link\"\n  }, \"Fractal\"))), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Sass, JavaScript, Webpack\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Nunjucks templating library\")))), mdx(Browser, {\n    description: \"A component library featuring sample code and technical documentation, built with Fractal.\",\n    mdxType: \"Browser\"\n  }, mdx(Video, {\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    mdxType: \"Video\"\n  }, mdx(\"source\", {\n    src: videoDSMP4Integrity,\n    type: \"video/mp4\"\n  }))), mdx(Markdown, {\n    mdxType: \"Markdown\"\n  }, mdx(\"p\", null, \"Whenever possible, I've found component libraries to be an ideal deliverable for a client with in-house resources or a long-term maintenance plan.\"), mdx(\"p\", null, \"I built the example above with the \", mdx(Link, {\n    to: \"https://fractal.build\",\n    mdxType: \"Link\"\n  }, \"Fractal\"), \" library, which created an incredibly smooth and consistent QA experience for both myself and the client's design team.\"), mdx(\"p\", null, \"I was able to develop and test each of the components in isolation first, and then pass the interactive versions to the designers for a more focused review. This project also demonstrated that a design system approach is just as effective with static templating engines as it is with more complex frameworks like Vue and React. Each component above was created using Nunjucks template partials, BEM naming conventions, and ES6 modules.\")), mdx(Markdown, {\n    mdxType: \"Markdown\"\n  }, mdx(\"h2\", null, \"Styleguides\"), mdx(\"p\", null, \"For sites featuring less interactivity and relatively static design elements, living styleguides are a nice middle ground. The examples below are taken from various projects ranging from 2017 to 2021, and were the first things I built for each.\")), mdx(Stack, {\n    padding: true,\n    collapse: true,\n    theme: _frontmatter.background,\n    mdxType: \"Stack\"\n  }, mdx(List, {\n    mdxType: \"List\"\n  }, mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Gatsby (React)\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Tailwind, Container Queries\")))), mdx(Browser, {\n    collapse: true,\n    description: \"A living styleguide created for promptworks.com.\",\n    mdxType: \"Browser\"\n  }, mdx(Still, {\n    src: imageDesktopDSPromptworks,\n    alt: \"Screenshot: A living styleguide for Promptworks\",\n    mdxType: \"Still\"\n  })), mdx(Stack, {\n    collapse: true,\n    theme: _frontmatter.background,\n    mdxType: \"Stack\"\n  }, mdx(List, {\n    mdxType: \"List\"\n  }, mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Jinja (Python)\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Stackup UI (BEM CSS), Tailwind\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Vanilla JS and \", mdx(Link, {\n    to: \"https://stimulus.hotwired.dev/\",\n    mdxType: \"Link\"\n  }, \"Stimulus\"))))), mdx(Browser, {\n    description: \"A living styleguide created for SCTE.\",\n    mdxType: \"Browser\"\n  }, mdx(Still, {\n    src: imageDesktopDSSCTE,\n    alt: \"Screenshot: A living styleguide for SCTE\",\n    mdxType: \"Still\"\n  })), mdx(Stack, {\n    collapse: true,\n    theme: _frontmatter.background,\n    mdxType: \"Stack\"\n  }, mdx(List, {\n    mdxType: \"List\"\n  }, mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, mdx(Link, {\n    to: \"https://apostrophecms.org\",\n    mdxType: \"Link\"\n  }, \"Apostrophe CMS\"), \" (Node.js)\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"LESS, jQuery\")), mdx(ListItem, {\n    mdxType: \"ListItem\"\n  }, mdx(\"p\", null, \"Nunjucks templating library\")))), mdx(Browser, {\n    description: \"A living styleguide created for the neighborhood of Roxborough, in northwest Philadelphia.\",\n    mdxType: \"Browser\"\n  }, mdx(Still, {\n    src: imageDesktopDSRoxborough,\n    alt: \"Screenshot: A living styleguide for Roxborough, Philadelphia\",\n    mdxType: \"Still\"\n  })), mdx(Browser, {\n    description: \"A living styleguide created for The Green Program.\",\n    mdxType: \"Browser\"\n  }, mdx(Still, {\n    src: imageDesktopDSGreenProgram,\n    alt: \"Screenshot: A living styleguide for The Green Program\",\n    mdxType: \"Still\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/work/design-systems/"},"frontmatter":{"title":"Design Systems","overhang":false,"background":"purple"}}},"pageContext":{"slug":"/work/design-systems/","prev":{"fields":{"slug":"/work/criterion/"},"frontmatter":{"draft":false,"title":"The Criterion Collection","overhang":true,"background":"blush"}},"next":{"fields":{"slug":"/work/remedy-plan/"},"frontmatter":{"draft":false,"title":"Remedy Plan Therapeutics","overhang":true,"background":"darkblue"}}}},"staticQueryHashes":[]}